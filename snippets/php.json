{
    "sessionClienteId": {
        "prefix": "okphp8sessionclienteid",
        "body": [
            "\\$_SESSION['okentrega']['acesso']['cliente_id']"
        ],
        "description": "Captura o valor do CLIENTE_ID da sessão."
    },
    "sessionUserId": {
        "prefix": "okphp8sessionuserid",
        "body": [
            "\\$_SESSION['okentrega']['acesso']['user_id']"
        ],
        "description": "Captura o valor do USER_ID da sessão."
    },
    "sessionToken": {
        "prefix": "okphp8sessiontoken",
        "body": [
            "\\$_SESSION['okentrega']['acesso']['token']"
        ],
        "description": "Captura o valor do TOKEN da sessão."
    },
    "devPrint": {
        "prefix": "okphp8printdev",
        "body": [
            "if (\\$_SESSION['okentrega']['acesso']['user_id'] == ${9999:okDevUserId}) {",
            "\tprint_r(${2:message});",
            "\tdie();",
            "}"
        ],
        "description": "print_r + if de usuário DESENVOLVIMENTO"
    },
    "hmlPrint": {
        "prefix": "okphp8printhml",
        "body": [
            "if (\\$_SESSION['okentrega']['acesso']['user_id'] == ${9999:okHmlUserId}) {",
            "\tprint_r(${2:message});",
            "\tdie();",
            "}"
        ],
        "description": "print_r + if de usuário HOMOLOGAÇÃO"
    },
    "prodPrint": {
        "prefix": "okphp8printprod",
        "body": [
            "if (\\$_SESSION['okentrega']['acesso']['user_id'] == ${9999:okProdUserId}) {",
            "\tprint_r(${2:message});",
            "\tdie();",
            "}"
        ],
        "description": "print_r + if de usuário PRODUÇÃO"
    },
    "tryCatchFinally": {
        "prefix": "okphp8trycatchfinally",
        "body": [
            "try {",
            "",
            "} catch (\\\\Exception \\$e) {",
            "\t\\$trace = \\$this->retorno['resposta_status']['files_error'];",
            "\t\\$this->retorno = (new Retorno())->erro_retornofuncao(",
            "\t\tline: \\$e->getLine(),",
            "\t\tmsg: \\$e->getMessage(),",
            "\t\terro_code: null,",
            "\t\tstatus: \\$e->getCode(),",
            "\t\ttrace: count(\\$trace) > 0 ? \\$trace : [__CLASS__ => ['function' => __FUNCTION__, 'file' => __FILE__]]",
            "\t);",
            "} finally {",
            "\t\\$this->retorno['resposta_status']['time'] = microtime(true) - \\$this->retorno['resposta_status']['time'];",
            "}",
            "return \\$this->retorno;"
        ],
        "description": "try catch finally default"
    },
    "okGetHostName": {
        "prefix": "okphp8gethostname",
        "body": [
            "\\$host = '';",
            "",
            "\\$host->getAcronymServerName() : string",
            "// 'DEV' || 'HML' || 'PROD'",
            "",
            "\\$host->getBaseUrl($acronym = '') : string",
            "// - Retorna a base url : ",
            "// - http://oks-s-dev.stil",
            "// - https://hml.okentrega.com.br",
            "// - https://www.okentrega.com.br"
        ],
        "description": "Diferencia a variável de URL pelo hostname do servidor."
    },
    "okInitReturn": {
        "prefix": "okphp8initretorno",
        "body": [
            "\\$this->retorno = (new Retorno())->iniciar_retornofuncao();"
        ],
        "description": "Diferencia a variável de URL pelo hostname do servidor."
    },
    "okMiddleware": {
        "prefix": "okphp8middleware",
        "body": [
            "include_once(Middleware.php);",
            "",
            "\\$middleware = new Middleware();",
            "",
            "// \\${1} - Constante ou diretório até o arquivo",
            "// \\${2} - Nome do arquivo + extensão",
            "// \\${3} - Nome da Classe",
            "// \\${4} - Nome da Função",
            "// \\${5} - ['constructor' => [] 'function' => []] -- Parâmetro em ordem, do constructor ou da função",
            "",
            "\\$response = \\$middleware->handle('${1:Constante ou diretório até o arquivo}@${2:Nome do arquivo + extensão}', '${3:Nome da Classe}@${4:Nome da Função}', ${5:['constructor' => [] 'function' => []]});",
            "",
            "\\$retorno = [];",
            "if (\\$response['resposta_status']['status'] == 1) {",
            "\t\\$retorno = \\$response['resposta_dados']['curl_json'];",
            "}"
        ],
        "description": "Diferencia a variável de URL pelo hostname do servidor."
    },
    "okInitClass": {
        "prefix": "okphp8initclass",
        "body": [
			"<?php",
			"",
			"include_once(dirname(__DIR__, 1) . '/system/obj/bootstrap.php8');",
			"include_once(SYSTEM . '/system/sys.callproc.php8');",
			"include_once(SYSTEM . 'sys.access.control.php8');",
			"",
			"if (!isset(\\$_SESSION)) {"
				"\tsession_start();",
			"}",
			"",
			"",
			"class ${1:okscargaosexcel} extends sys_accesscontrol",
			"{",

				"public \\$retorno = [];",
				"public \\$token = '';",
				"public function __construct()",
				"{",
					"\tparent::__construct();",
					"\t\\$this->retorno = (new Retorno())->iniciar_retornofuncao();",
					"\t\\$this->token = \\$_SESSION['okentrega']['acesso']['token'];",
				"}",
			"}"
		],
		"description": "create a the new class in php8."
    },
    "PHP-VIEW-INIT": {
		"prefix": "okphp8initview",
		"body": [
			"<?php",
			"",
			"ini_set('display_errors', 0);",
			""/* Montando o código do erro que será apresentado */""
			"\\$localizar = array(strtolower(__DIR__), '/', '\\\\\\\\', '.php', '.');",
			"\\$substituir = array('', '', '', '', '-');",
			"\\$error_code = strtoupper(str_replace(\\$localizar, \\$substituir, strtolower(__FILE__))) . '-';",
			"",
			/* Verificando variavel sessão */
			"include_once(dirname(__DIR__, 1) . '/system/sys.iniciar_sessao.php8');",
			"",
			"if (!empty(\\$_SESSION['okentrega']['acesso']['token'])) {",
				"\t\\$page = str_replace(__DIR__ . '/', '', __FILE__);",
			"",
				"\tinclude_once(\\$_SESSION['okentrega']['path']['application'] . 'frete.validacaoFatura.class.php8');",
				"\tinclude_once(\\$_SESSION['okentrega']['path']['application'] . '${1:pre}.${2:file}.class.php8');",
				"\t\\$instancia = new ${1:pre}${2:file}();",

				"\t\\$validarToken = \\$instancia->validarAcesso(\\$_SESSION['okentrega']['acesso']['token'], \\$page);",

				"\tif (\\$validarToken['resposta_status']['status'] == 0) {",
					"\t\t\\$retorno = \\$validarToken;",
					"\t\tinclude_once(\\$_SESSION['okentrega']['path']['system'] . 'sys.erro.acesso.page.php');",
					"\t\texit();",
				"\t}",
			"} else {",
				"\t\\$retorno['resposta_status']['error_code'] = \\$error_code . __LINE__;",
				"\t\\$retorno['resposta_status']['msg'] = 'Não foi possível identificar sua credencial de acesso. Por favor, tente se autenticar novamente.';",
				"\t\\$retorno['resposta_status']['msg_redirec'] = 'Clique aqui para se identificar.';",
				"\tinclude_once(\\$_SESSION['okentrega']['path']['system'] . 'sys.erro.acesso.page.php');",
				"\texit();",
			"}",
			"?>",
			"",
			"<!DOCTYPE html>",
			"<html lang='pt-br'>",
			"",
			"<head>",
				"\t<meta charset='UTF-8'>",
				"\t<meta http-equiv='X-UA-Compatible' content='IE=edge'>",
				"\t<meta name='keywords' content='Entrega OK Entrega Fatura Logística' />",
				"\t<meta name='author' content='OK Entrega' />",
				"\t<meta name='robots' content='' />",
				"\t<meta name='viewport' content='width=device-width, initial-scale=1.0'>",
				"\t<meta name='description' content='Site OK Entrega' />",
				"\t<meta property='og:title' content='OK Entrega' />",
				"\t<meta property='og:description' content='Site OK Entrega' />",
				"\t<meta property='og:image' content='../../front_assets/images/logo_web_esquerda.png' />",
				"\t<meta name='format-detection' content='telephone=no'>",
				"\t<title>OK Entrega</title>",
				"\t<link rel='icon' href='../../assets/img/reforma_okentrega/icon/favicon-96x96.png'>",
				"\t<?php include_once(\\$_SESSION['okentrega']['path']['system'] . 'sys.header2_css.php8'); ?>"
			"</head>",
			"",
			"<body>",
				"\t<?php include_once \\$_SESSION['okentrega']['path']['system'] . 'sys.preloader.php8'; ?>",
				"",
				"\t<div id='main-wrapper'>",
					"\t\t<?php include_once(\\$_SESSION['okentrega']['path']['system'] . 'sys.header2.php8'); ?>",
					"",
					"\t\t<div class='content-body' style='min-height:<?php print \\$menu['resposta_dados']['min_hei']; ?>rem ;'>",
						"\t\t\t<div class='container-fluid'>",
							"\t\t\t\t<div class='row'>",
			"",
								"\t\t\t\t\t<div class='card' id='tableintegracoes_box'>",
									"\t\t\t\t\t\t<div class='card-header '>",
										"\t\t\t\t\t\t\t<div class='d-flex gap-2 w-40 align-items-center'>",
			"",
											"\t\t\t\t\t\t\t\t<h5 class='card-title validation-second-popOver text-nowrap'>",
												"\t\t\t\t\t\t\t\t\tNova Tela",
											"\t\t\t\t\t\t\t\t</h5>",
											"\t\t\t\t\t\t\t\t\t<!-- <button class='btn btn-primary' id='integrationbtn' onclick='$('#filterintegration').modal('show')'>aqui o botão</button> -->"
										"\t\t\t\t\t\t\t</div>",
									"\t\t\t\t\t\t</div>",
			"",
									"\t\t\t\t\t\t<div class='card-body'>",
										"\t\t\t\t\t\t\t<table id='tableintegracoes' class='display' style='min-width: 845px;'></table>",
										"\t\t\t\t\t\t\t<center id='msg_filtrar'>Hello World !",
										"\t\t\t\t\t\t\t</center>",
									"\t\t\t\t\t\t</div>",
								"\t\t\t\t\t</div>",
							"\t\t\t\t</div>",
						"\t\t\t</div>",
					"\t\t</div>",
			"",
				"\t</div>",
			"",
				"\t<?php include_once(\\$_SESSION['okentrega']['path']['system'] . 'sys.footer2.php8'); ?>",
				"\t<?php include_once(\\$_SESSION['okentrega']['path']['system'] . 'sys.scrolltop.php8'); ?>",
				"\t<script src='../../assets/js/application/app.${1:pre}.${2:file}.js'></script>",
			"",
			"</body>",
			"",
			"</html>"
		],
		"description": "create a the new view in php8."
	},
    "okQuery": {
        "prefix": "okphp8query",
        "body": [
            "\\$sql${sqlvariable} = '${2:sqlstring}';",
            "",
            "\\$query${sqlvariable} = (new Query())->query(\\$sql${sqlvariable});",
            "",
            "if (\\$query${sqlvariable}['resposta_status']['status'] == 0) {",
            "\tthrow new Exception(\\$query${sqlvariable}['resposta_status']['msg']);",
            "}"
        ],
        "description": "Diferencia a variável de URL pelo hostname do servidor."
    },
    "okGetRealm": {
        "prefix": "okphp8getrealm",
        "body": [
            "\\$getrealm = parent::getRealm(\\$_SESSION['okentrega']['acesso']['user_id']);",
            "",
            "if(\\$getrealm['resposta_status']['status'] != 1) {",
            "",
            "\t\\$retorno = \\$this->erro_retornofuncao(__LINE__, 'Erro ao buscar informações do usuário');",
            "}"
        ],
        "description": "Trecho de código para resgatar o tipo de acesso do usuário."
    },
    "createFunction": {
        "prefix": "okphp8function",
        "body": [
            "${1:public | protected | private} function ${2:nameFunction}()",
            "{",
            "\ttry {",
            "\t\t",
            "\t} catch (\\\\Exception \\$e) {",
            "\t\t\\$trace = \\$this->retorno['resposta_status']['files_error'];",
            "\t\t\\$this->retorno = (new Retorno())->erro_retornofuncao(",
            "\t\t\tline: \\$e->getLine(),",
            "\t\t\tmsg: \\$e->getMessage(),",
            "\t\t\terro_code: null,",
            "\t\t\tstatus: \\$e->getCode(),",
            "\t\t\ttrace: count(\\$trace) > 0 ? \\$trace : [__CLASS__ => ['function' => __FUNCTION__, 'file' => __FILE__]]",
            "\t\t);",
            "\t} finally {",
            "\t\t\\$this->retorno['resposta_status']['time'] = microtime(true) - \\$this->retorno['resposta_status']['time'];",
            "\t}",
            "\treturn \\$this->retorno;",
            "}"
        ],
        "description": "create function default"
    },
    "ifThrow": {
        "prefix": "okphp8throw",
        "body": [
            "if (${1:condition}) {",
            "\tthrow new Exception(${2:message});",
            "}"
        ],
        "description": "'if throw' facilitated"
    }
}
